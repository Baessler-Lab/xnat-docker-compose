version: '3.7'

networks:
  xnat-services:
    name: &networkname xnat-services
    driver: bridge

services:
  xnat-web:
    build:
      context: ./xnat
      args:
        XNAT_VERSION: ${XNAT_VERSION}
        XNAT_SMTP_ENABLED: ${XNAT_SMTP_ENABLED}
        XNAT_SMTP_HOSTNAME: ${XNAT_SMTP_HOSTNAME}
        XNAT_SMTP_PORT: ${XNAT_SMTP_PORT}
        XNAT_SMTP_AUTH: ${XNAT_SMTP_AUTH}
        XNAT_SMTP_USERNAME: ${XNAT_SMTP_USERNAME}
        XNAT_SMTP_PASSWORD: ${XNAT_SMTP_PASSWORD}
        XNAT_DATASOURCE_DRIVER: ${XNAT_DATASOURCE_DRIVER}
        XNAT_DATASOURCE_URL: ${XNAT_DATASOURCE_URL}
        XNAT_DATASOURCE_USERNAME: ${XNAT_DATASOURCE_USERNAME}
        XNAT_DATASOURCE_PASSWORD: ${XNAT_DATASOURCE_PASSWORD}
        TOMCAT_XNAT_FOLDER: ${TOMCAT_XNAT_FOLDER}
        XNAT_ROOT: ${XNAT_ROOT}
        XNAT_HOME: ${XNAT_HOME}
        XNAT_EMAIL: ${XNAT_EMAIL}
    ports:
      - 8104:8104
    volumes:
      - ./xnat/plugins:${XNAT_HOME}/plugins
      - ./xnat-data/home/logs:${XNAT_HOME}/logs
      - ./xnat-data/archive:${XNAT_ROOT}/archive
      - ./xnat-data/build:${XNAT_ROOT}/build
      - ./xnat-data/cache:${XNAT_ROOT}/cache
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - xnat-db
    environment:
      - CATALINA_OPTS=-Xms${XNAT_MIN_HEAP} -Xmx${XNAT_MAX_HEAP} -Dxnat.home=${XNAT_HOME}
      - XNAT_HOME=${XNAT_HOME}
    networks:
      - xnat-services

  xnat-db:
    image: postgres:${PG_VERSION}
    expose:
      - "5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
      #
      - ./postgres:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_PASSWORD=${XNAT_DATASOURCE_ADMIN_PASSWORD}
      - POSTGRES_DB=${XNAT_DATASOURCE_NAME}
      # variables for the sql script
      - XNAT_DATASOURCE_USERNAME=${XNAT_DATASOURCE_USERNAME}
      - XNAT_DATASOURCE_PASSWORD=${XNAT_DATASOURCE_PASSWORD}
    networks:
      - xnat-services

  xnat-nginx:
    image: nginx:${NGINX_VERSION}
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
    expose:
      - "80"
    networks:
      - xnat-services
    depends_on:
      - xnat-web
      - jupyterhub

  jupyterhub:
    build:
        context: ./jupyterhub
        args:
            JHUB_VER: "${JHUB_VER}"
            JHUB_DOCKER_SPAWNER_VERSION: "${JHUB_DOCKER_SPAWNER_VERSION}"
    volumes:
        # Bind Docker socket on the host so we can connect to the daemon from
        # within the container
        - "/var/run/docker.sock:/var/run/docker.sock:rw"
    networks:
        - xnat-services
    environment:
        JHUB_DOCKER_SPAWNER_NETWORK: *networkname
        JHUB_USER_NB_IMG: "${JHUB_USER_NB_IMG}"
        JHUB_XNAT_URL: "${JHUB_XNAT_URL}"
        JHUB_XNAT_ARCHIVE: "${JHUB_XNAT_ARCHIVE}"
        JUPYTERHUB_CRYPT_KEY: "${JHUB_CRYPT_KEY}"
